#!/usr/bin/env ruby
failures = 0
passes = 0
results = false
def only_dots?(string_in)
  string_in.each_char do |c|
    if c == "." or c == " "
      #dots = true
    else
      return false
    end
  end
  return true
end

while stdin = gets
  puts "#{stdin}"
  STDOUT.flush
  if stdin.include?("Test results")
          results = true
  end
  if results == false
    if stdin.include?("Failure in")
      test = stdin.gsub("[exec] Failure in ", "").strip
      failures += 1
      puts "##teamcity[testStarted name=\'#{test}\']"
      puts "##teamcity[buildStatus text='Tests Failed: #{failures}, passed: #{passes}, Android tests: #{failures + passes}']"
      puts "##teamcity[testFailed name=\'#{test}\']"
      puts "##teamcity[testFinished name=\'#{test}\']"
      STDOUT.flush
    end
    if stdin.include?(":.")
      colons = stdin.split(":")
      periods = colons[1].count(".")
      passes += periods
      puts "##teamcity[buildStatus text='Tests Failed: #{failures}, passed: #{passes}, Android tests: #{failures + passes}']"
      STDOUT.flush
    end
    if only_dots?(stdin)
      periods = stdin.count(".")
      passes += periods
      puts "##teamcity[buildStatus text='Tests Failed: #{failures}, passed: #{passes}, Android tests: #{failures + passes}']"
      STDOUT.flush
    end
    if stdin.include?("BUILD FAILED")
      puts "##teamcity[buildStatus status='FAILURE']"
      STDOUT.flush
    end
    if stdin.include?("[exec] error: device not found")
      puts "##teamcity[buildStatus status='FAILURE' text='Emulator Error']"
      STDOUT.flush
    end
  end
end
